[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "swift-browser-ui"
dynamic = ["version"]
description = "Object browser Web UI for Openstack Swift API"
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
authors = [
    { name = "CSC Developers" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]
dependencies = [
    "aiohttp-session==2.12.1",
    "aiohttp==3.11.13",
    "redis==5.2.1",
    "asyncpg==0.30.0",
    "certifi==2025.1.31",
    "click==8.1.8",
    "cryptography==44.0.1",
    "gunicorn==23.0.0",
    "keystoneauth1==5.9.1",
    "oidcrp==2.1.4",
    "python-swiftclient==4.6.0",
    "uvloop==0.21.0",
    "msgpack==1.1.0",
]

[project.optional-dependencies]
docs = [
    "sphinx==8.1.3",
    "sphinx_rtd_theme==3.0.2",
]
test = [
    "black==25.1.0",
    "coverage==7.6.10",
    "flake8-docstrings==1.7.0",
    "flake8==7.1.1",
    "mypy==1.14.1",
    "pytest-cov==6.0.0",
    "pytest-xdist==3.6.1",
    "pytest==8.3.4",
    "tox==4.23.2",
    "setuptools==71.1.0",
]
ui_test = [
    "pytest-timeout==2.3.1",
    "pytest==8.3.4",
]
dev = [
    "honcho==2.0.0",
    "pre-commit==4.0.1",
    "pyspelling==2.10",
    "ruff==0.9.2",
    "types-certifi",
    "types-redis",
    "types-requests",
]

[project.scripts]
swift-browser-ui = "swift_browser_ui.launcher:run_ui"
swift-sharing-request = "swift_browser_ui.launcher:run_request"
swift-upload-runner = "swift_browser_ui.launcher:run_upload"
swift-x-account-sharing = "swift_browser_ui.launcher:run_sharing"

[project.urls]
Source = "https://github.com/CSCfi/swift-browser-ui"
Documentation = "https://swift-browser-ui.readthedocs.io"

[tool.hatch.version]
path = "swift_browser_ui/__init__.py"

[tool.black]
line-length = 90
target-version = ['py312']

[tool.isort]
atomic = true
profile = "black"
line_length = 90
py_version=312

[tool.ruff]
line-length = 90
target-version = "py312"

# https://beta.ruff.rs/docs/rules/
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    # "ANN",   # flake8-annotations
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "D",   # pydocstyle
#    "UP",  # pyupgrade
    "S",   # Bandit
]

ignore = [
    "ANN101",  # Missing type annotation for `self` in method
    "E501",    # line too long, handled by black
    "B904",    # do not perform function calls in argument defaults
    "PLR2004", # magic value used in comparison
    "S113",    # Probable use of requests call without timeout
    "D203",    # one-blank-line-before-class
    "D213",    # multi-line-summary-second-line
]

[tool.ruff.mccabe]
max-complexity = 15
